# make_presentation.py
import os, aiohttp, asyncio
from dotenv import load_dotenv

load_dotenv()
PRESENTON_API_KEY = os.getenv("PRESENTON_API_KEY")

# üëâ –æ–±–ª–∞—á–Ω—ã–π API
API_URL = "https://api.presenton.ai/api/v1/ppt/presentation/generate"

async def generate_presentation(content: str, n_slides: int = 8, language: str = "Russian") -> dict:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç/—Ä–µ–∑—é–º–µ –≤ Presenton API –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –æ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏.
    """
    if not PRESENTON_API_KEY:
        raise RuntimeError("‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω PRESENTON_API_KEY –≤ .env")

    headers = {
        "Authorization": f"Bearer {PRESENTON_API_KEY}",
        "Content-Type": "application/json",
    }

    # üî• –ü—Ä–æ–º–ø—Ç –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–π –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏
    instructions = (
        f"–°–æ–∑–¥–∞–π –∫—Ä–∞—Å–∏–≤—É—é –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏—é –Ω–∞ {language} —è–∑—ã–∫–µ "
        "—Å —á—ë—Ç–∫–∏–º –ø–ª–∞–Ω–æ–º, –º–∏–Ω–∏–º—É–º —Ç–µ–∫—Å—Ç–∞ –Ω–∞ —Å–ª–∞–π–¥–∞—Ö, "
        "–æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ–º —Å –∫—Ä–∞—Å–∏–≤—ã–º–∏ –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–º–∏ —Ñ–æ–Ω–∞–º–∏ –∏ –∫–∞—Ä—Ç–∏–Ω–∫–∞–º–∏. "
        "–ò—Å–ø–æ–ª—å–∑—É–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É: –≤–≤–µ–¥–µ–Ω–∏–µ, –æ—Å–Ω–æ–≤–Ω—ã–µ –ø—É–Ω–∫—Ç—ã, –≤—ã–≤–æ–¥. "
        "–î–æ–±–∞–≤—å –∫—Ä–∞—Å–∏–≤—ã–µ background, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –±–µ–ª—ã–π —Ñ–æ–Ω."
        "–î–æ–±–∞–≤—å —Ä–∞–∑–ª–∏—á–Ω—ã–µ –∫—Ä–∞—Å–∏–≤—ã–µ —Å–∏–º–≤–æ–ª—ã."
    )

    payload = {
        "content": content,
        "n_slides": n_slides,
        "language": language,
        "template": "general",
        "export_as": "pptx",
        "instructions": instructions,
    }

    async with aiohttp.ClientSession() as session:
        async with session.post(API_URL, headers=headers, json=payload) as resp:
            if resp.status >= 400:
                body = await resp.text()
                raise RuntimeError(f"Presenton {resp.status}: {body}")
            return await resp.json()


# –î–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞
if __name__ == "__main__":
    async def test():
        text = "–¢–µ—Å—Ç–æ–≤—ã–π —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ç.\n–†–µ–∑—é–º–µ: –ø—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–∏."
        result = await generate_presentation(text, n_slides=5, language="Russian")
        print(result)

    asyncio.run(test())
